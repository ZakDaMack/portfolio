{"version":3,"file":"component---src-templates-blog-jsx-content-file-path-blog-2024-12-14-how-safe-wifi-index-mdx-d2decd8ccd6cd6bf94b7.js","mappings":"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","sources":["webpack://portfolio/./blog/2024-12-14-how-safe-wifi/index.mdx","webpack://portfolio/./src/templates/blog.jsx","webpack://portfolio/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.em, null, \"So you've got a brand new router from your ISP, you've set a password and now you're securely browsing your favourite \", React.createElement(_components.strong, null, \"child-friendly\"), \" website. But how secure are you really?\")), \"\\n\", React.createElement(_components.p, null, \"Pwnagotchi is a handheld digital pet for hacking Wi-Fi that gets smarter as it visits more Wi-Fi networks. Pwnagotchi learns by capturing Wi-Fi messages while their owner takes them for walks. Pwnagotchi is a fun hacking project that can be built with a simple Raspberry Pi Zero.\\nHow does it work?\\nPwnagotchi is an A2C-based “AI” powered by bettercap that learns from its surrounding WiFi environment in order to maximize the crackable WPA key material it captures (either through passive sniffing or by performing deauthentication and association attacks). This material is collected on disk as PCAP files containing any form of crackable handshake supported by hashcat, including full and half WPA handshakes as well as PMKIDs.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.crowdsec.net/\"\n  }, \"CrowdSec\"), \"  is a free, modern & collaborative behavior detection engine, offering more features than Fail2Ban, which protects against brute-force attempts. Crowdsec utilizes multiple open source data sources shared amongst its many users to protect against common IPs and CVEs (Common Vulnerability Exploits) and acts as a \\\"bouncer\\\" for common reverse proxies such as Traefik and Nginx, even Authlog to protect you against unwanted SSH attempts.\"), \"\\n\", React.createElement(_components.p, null, \"In this guide, I will be adding Crowdsec to my existing Traefik reverse proxy to parse incoming traffic before being redirected by my reverse proxy.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"version: \\\"3\\\"\\nservices:\\n  # existing Traefik container\\n  traefik:\\n    image: traefik:v2.9\\n    container_name: traefik\\n    restart: unless-stopped\\n    ports:\\n      - 80:80\\n      - 443:443\\n    volumes:\\n      - /etc/acme:/etc/acme\\n      - /var/run/docker.sock:/var/run/docker.sock:ro\\n      - /etc/traefik:/etc/traefik\\n      - /var/log:/var/log\\n    labels:\\n      # these are the min traefik settings required to get crowdsec working\\n      # crowdsec parses the access log to look for any offending IPs\\n      - accessLog=true\\n      - accessLog.filePath=/var/log/traefik/access.log\\n      - accessLog.bufferingSize=100 \\n      - accessLog.filters.statusCodes=204-299,400-499,500-59 \\n      - providers.docker=true\\n      - entrypoints.web.address=:80acme.json\\n      - entrypoints.http.http.middlewares=bouncer@docker\\n  \\n  # the actual crowdsec application\\n  crowdsec:\\n    image: crowdsecurity/crowdsec:latest\\n    container_name: crowdsec\\n    restart: unless-stopped\\n    depends_on:\\n      - traefik\\n    volumes:\\n      - /etc/crowdsec:/etc/crowdsec\\n      - /var/lib/crowdsec/data:/var/lib/crowdsec/data\\n      - /var/log:/var/log\\n    environment:\\n      COLLECTIONS: crowdsecurity/linux crowdsecurity/traefik\\n  \\n  # the bouncer which is polled by traefik\\n  bouncer:\\n    image: fbonalair/traefik-crowdsec-bouncer:latest\\n    container_name: bouncer\\n    restart: unless-stopped\\n    environment:\\n      CROWDSEC_BOUNCER_API_KEY: \\n      CROWDSEC_AGENT_HOST: crowdsec:8080\\n    depends_on:\\n      - crowdsec\\n    # the labels tell traefik to make a middleware which calls the bouncer before routing to ensure that the traffic is genuine\\n    labels:\\n      - traefik.http.middlewares.bouncer.forwardauth.address=http://bouncer:8080/api/v1/forwardAuth\\n      - traefik.http.middlewares.bouncer.forwardauth.trustForwardHeader=true\\n      - traefik.http.services.bouncer.loadbalancer.server.port=8080\\n\")), \"\\n\", React.createElement(_components.p, null, \"Above is a basic \", React.createElement(_components.em, null, \"docker-compose.yaml\"), \" file which contains the  3 docker images needed to set up crowdsec. The main crowdsec container does all the legwork and contains the decisions list and apis to poll the public blocklists and decide if an incoming IP is valid or not. The bouncer container is the middleware that traefik uses to communicate with crowdsec, all incoming traffic will go through the bouncer before being forwarded to the correct internal server.\"), \"\\n\", React.createElement(_components.p, null, \"Once the containers are up and running, we need  to connect the crowdsec container to the crowdsec API. To do this, you will need to navigate to \", React.createElement(_components.a, {\n    href: \"https://www.crowdsec.net/?ref=blog.zakdowsett.co.uk\"\n  }, \"CrowdSec\"), \" and create a free account. Then go to \", React.createElement(_components.strong, null, \"Security Engines\"), \" under your profile and create a new engine. This will generate a token for you to easily register your crowdec container to their API:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./enrollengine.png\",\n    alt: \"Enroll on CrowdSec website\"\n  }), \"\\n\", React.createElement(_components.em, null, \"Get your new security engine token from the CrowdSec website\")), \"\\n\", React.createElement(_components.p, null, \"The code can then be executed on the docker container like so:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"sudo docker exec crowdsec cscli console enroll {your token value here}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Once that is done, go back to the CrowdSec website and confirm that you want to enroll the engine, and voila! Just like that, your CrowdSec engine is authenticated and can call the CrowdSec API. You can also view your statistics and alerts on the website at any time to see how many threats you have prevented.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./acceptenroll.png\",\n    alt: \"Confirm engine enrollment\"\n  }), \"\\n\", React.createElement(_components.em, null, \"Confirm that you want to enroll your container with CrowdSec\")), \"\\n\", React.createElement(_components.p, null, \"Now, we need to connect our bouncer to CrowdSec so that our reverse proxy can query the CrowdSec API. To do that, we need to generate a key to ensure that only the bouncer can query our CrowdSec container:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"sudo docker exec crowdsec cscli bouncers add traefik-bouncer\\n\")), \"\\n\", React.createElement(_components.p, null, \"Copy the key that is returned and add it into the environment variable \", React.createElement(_components.em, null, \"CROWDSEC_BOUNCER_API_KEY\"), \" that we left blank before in our compose file. Once this is done, restart your containers and everything is ready to go!\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Now lets test to see if everything works:\")), \"\\n\", React.createElement(_components.p, null, \"To make sure everything works, we will add our public IP to our decisions list to ensure that any traffic from our address is blocked by Crowdsec, like so:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"sudo docker exec crowdsec cscli decisions add --ip XXX.XX.XX.XXX\\n\")), \"\\n\", React.createElement(_components.p, null, \"Then, navigating to one of our endpoints, it should return a 403 (Forbidden response) like so:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./forbidden.png\",\n    alt: \"Website with 503 message\"\n  }), \"\\n\", React.createElement(_components.em, null, \"Your website should now show a forbidden message\")), \"\\n\", React.createElement(_components.p, null, \"Once we're happy that everything is set up and working, we can remove our IP from the decisions list so that we can access everything again:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"sudo docker exec crowdsec cscli decisions delete --ip XXX.XX.XX.XXX\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"A quick note:\")), \"\\n\", React.createElement(_components.p, null, \"If you are using Traefik, you may find that Crowdsec is not listening for offending IPs in your access log. If this is the case, you will need to modify your \", React.createElement(_components.em, null, \"acquis.yaml\"), \" file, found under /etc/crowdsec and append the follwoing lines  to the bottom of the yaml so that CrowdSec knows where your Traefik access log is:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"---\\nfilenames:\\n  - /var/log/traefik/access.log\\nlabels:\\n  type: traefik\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/portfolio/portfolio/blog/2024-12-14-how-safe-wifi/index.mdx\";\nimport React from 'react';\nimport {motion} from 'motion/react';\nimport {graphql, Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport {MDXProvider} from '@mdx-js/react';\nimport Header from \"@/components/header\";\nimport Footer from \"@/components/footer\";\nimport './blog.css';\nconst BlogPostPage = ({data, children}) => {\n  const blog = data.mdx;\n  const heroImg = getImage(blog.frontmatter.hero_img);\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    className: \"max-w-screen-xl left-1/2 -translate-x-1/2\",\n    blurHeight: 100\n  }), React.createElement(\"main\", {\n    className: \"w-screen min-h-screen\"\n  }, React.createElement(\"article\", null, React.createElement(motion.section, {\n    initial: {\n      opacity: 0,\n      y: 50\n    },\n    whileInView: {\n      opacity: 1,\n      y: 0\n    },\n    viewport: {\n      once: true\n    },\n    className: \"mx-auto pt-3 px-4 max-w-screen-xl\"\n  }, React.createElement(\"div\", {\n    className: \"rounded-3xl overflow-hidden relative\"\n  }, React.createElement(GatsbyImage, {\n    image: heroImg,\n    objectFit: \"cover\",\n    className: \"w-full aspect-video\",\n    alt: blog?.frontmatter?.hero_attr\n  }), React.createElement(\"div\", {\n    className: \"absolute top-0 bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent hidden md:flex flex-col justify-end p-6  \"\n  }, React.createElement(\"div\", null, blog?.frontmatter?.tags?.map(tag => React.createElement(Link, {\n    key: tag,\n    className: \"rounded-3xl p-3 bg-black/10 text-nord-4 border border-nord-0 backdrop-blur-sm\",\n    to: `/tags/${tag.toLowerCase()}`\n  }, tag))), React.createElement(\"div\", {\n    className: \"md:flex justify-between items-end my-8\"\n  }, React.createElement(\"div\", {\n    className: \"space-y-3 max-w-4xl\"\n  }, React.createElement(\"h1\", {\n    className: \"text-3xl md:text-5xl text-nord-6 font-bold\"\n  }, blog?.frontmatter?.title), React.createElement(\"p\", {\n    className: \"text-lg text-neutral-400\"\n  }, blog?.frontmatter?.subtitle)), React.createElement(\"div\", null, React.createElement(\"p\", {\n    className: \"text-nord-6\"\n  }, blog?.frontmatter?.date))))), React.createElement(\"p\", {\n    className: \"text-sm pl-4\"\n  }, blog?.frontmatter?.hero_attr)), React.createElement(motion.section, {\n    initial: {\n      opacity: 0,\n      y: 50\n    },\n    whileInView: {\n      opacity: 1,\n      y: 0\n    },\n    viewport: {\n      once: true\n    },\n    transition: {\n      delay: 0.2\n    },\n    id: \"article__content\",\n    className: \"text-justify space-y-6 px-4 md:px-8 pt-6 pb-16 md:py-28 max-w-screen-md mx-auto\"\n  }, React.createElement(\"div\", {\n    className: \"block md:hidden mb-8 text-left\"\n  }, React.createElement(\"div\", {\n    className: \"space-y-3\"\n  }, React.createElement(\"h1\", {\n    className: \"text-2xl font-bold\"\n  }, blog?.frontmatter?.title), React.createElement(\"p\", {\n    className: \"text-lg text-neutral-400\"\n  }, blog?.frontmatter?.subtitle)), React.createElement(\"p\", null, blog?.frontmatter?.date), React.createElement(\"div\", {\n    className: \"border mt-6\"\n  })), React.createElement(MDXProvider, null, children)))), React.createElement(Footer));\n};\nBlogPostPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data}) => React.createElement(\"title\", null, data.mdx?.frontmatter?.title, \" | Zak Dowsett\");\nexport const query = graphql`\n  query GetBlog($slug: String!) {\n    mdx(fields: {slug: { eq: $slug }}) {\n      frontmatter {\n        title\n        subtitle\n        tags\n        date(formatString: \"DD MMMM, YYYY\")\n        hero_attr\n        hero_img {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","a","pre","code","img","_provideComponents","components","React","href","className","src","alt","wrapper","MDXLayout","BlogPostPage","_ref","data","children","blog","mdx","heroImg","getImage","frontmatter","hero_img","Header","blurHeight","motion","section","initial","opacity","y","whileInView","viewport","once","GatsbyImage","image","objectFit","_blog$frontmatter","hero_attr","_blog$frontmatter2","tags","_blog$frontmatter2$ta","map","tag","Link","key","to","toLowerCase","_blog$frontmatter3","title","_blog$frontmatter4","subtitle","_blog$frontmatter5","date","_blog$frontmatter6","transition","delay","id","_blog$frontmatter7","_blog$frontmatter8","_blog$frontmatter9","MDXProvider","Footer","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$mdx","_data$mdx$frontmatter","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}